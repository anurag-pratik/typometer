{"version":3,"sources":["components/TopBar.jsx","components/DisplayedText.jsx","displayTexts.js","components/Wpm.jsx","components/GameBox.jsx","components/Footer.jsx","App.js","index.js"],"names":["TopBar","className","fontSize","DisplayedText","props","text","displayText","split","map","letter","i","clr","userInput","length","unselectable","style","backgroundColor","texts","Wpm","characters","secs","no","time","wpm","Math","floor","GameBox","React","useState","getText","setText","inputText","setInputText","chars","setChars","sec","setSec","start","setStart","finish","setFinish","countRef","useRef","displayTexts","random","placeholder","autoFocus","spellCheck","onChange","event","inp","target","value","clearInterval","current","onDone","txt","replace","filter","car","ind","countWords","setInterval","prevValue","name","readOnly","onClick","type","class","Footer","App","window","open","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3113c11.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./TopBar.css\";\r\n\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\n\r\nfunction TopBar() {\r\n    return (\r\n        <div className=\"TopBar\">\r\n         <h1 className=\"titleText\">Typometer<SpeedIcon fontSize=\"inherit\"/></h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBar;\r\n","import React from \"react\";\r\nimport \"./DisplayedText.css\"\r\n\r\nfunction DisplayedText(props) {\r\n  const text = props.displayText.split('');\r\n\r\n  return (\r\n    <div className=\"textDisp\">\r\n      {text.map((letter, i) => {\r\n        let clr;\r\n        if (i < props.userInput.length) {\r\n          if (letter === props.userInput[i]) clr = \"#388e3c\";\r\n          else clr = \"#d32f2f\";\r\n        }\r\n        return (\r\n          <span className=\"unsText\" unselectable=\"on\" key={i} style={{ backgroundColor: clr }}>\r\n            {letter}\r\n          </span>\r\n        );\r\n      })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayedText;\r\n","const texts = [\r\n    \"Proofreader applicants are tested primarily on their spelling, speed, and skill in finding errors in the sample text. Toward that end, they may be given a list of ten or twenty classically difficult words and a proofreading test, both tightly timed. The proofreading test will often have a maximum number of errors per quantity of text and a minimum amount of time to find them. The goal of this approach is to identify those with the best skill set.\",\r\n    \"There are many idiosyncratic typing styles in between novice-style 'hunt and peck' and touch typing. For example, many 'hunt and peck' typists have the keyboard layout memorized and are able to type while focusing their gaze on the screen. Some use just two fingers, while others use 3-6 fingers. Some use their fingers very consistently, with the same finger being used to type the same character every time, while others vary the way they use their fingers.\",\r\n    \"Words per minute (WPM) is a measure of typing speed, commonly used in recruitment. For the purposes of WPM measurement a word is standardized to five characters or keystrokes. Therefore, 'brown' counts as one word, but 'accounted' counts as two. The benefits of a standardized measurement of input speed are that it enables comparison across language and hardware boundaries. The speed of an Afrikaans-speaking operator in Cape Town can be compared with a French-speaking operator in Paris.\",\r\n    \"Many touch typists also use keyboard shortcuts or hotkeys when typing on a computer. This allows them to edit their document without having to take their hands off the keyboard to use a mouse. An example of a keyboard shortcut is pressing the Ctrl key plus the S key to save a document as they type, or the Ctrl key plus the Z key to undo a mistake. Many experienced typists can feel or sense when they have made an error and can hit the Backspace key and make the correction with no increase in time between keystrokes.\",\r\n    \"Some people combine touch typing and hunt and peck by using a buffering method. In the buffer method, the typist looks at the source copy, mentally stores one or several sentences, then looks at the keyboard and types out the buffer of sentences. This eliminates frequent up and down motions with the head and is used in typing competitions in which the typist is not well versed in touch typing. Not normally used in day-to-day contact with keyboards, this buffer method is used only when time is of the essence.\",\r\n    \"A transcription service is a business which converts speech (either live or recorded) into a written or electronic text document. Transcription services are often provided for business, legal, or medical purposes. The most common type of transcription is from a spoken-language source into text such as a computer file suitable for printing as a document such as a report. Common examples are the proceedings of a court hearing such as a criminal trial (by a court reporter) or a physician's recorded voice notes (medical transcription).\",\r\n    \"A data entry clerk is a member of staff employed to enter or update data into a computer system. Data is often entered into a computer from paper documents using a keyboard. The keyboards used can often have special keys and multiple colors to help in the task and speed up the work. Proper ergonomics at the workstation is a common topic considered. The Data Entry Clerk may also use a mouse, and a manually-fed scanner may be involved. \",\r\n    \"Because of the laboriousness of the translation process, since the 1940s efforts have been made, with varying degrees of success, to automate translation or to mechanically aid the human translator. More recently, the rise of the Internet has fostered a world-wide market for translation services and has facilitated 'language localization'. Ideally, the translator must know both languages, as well as the subject that is to be translated.\",\r\n    \"Engineers, as practitioners of engineering, are people who invent, design, analyze, build, and test machines, systems, structures and materials to fulfill objectives and requirements while considering the limitations imposed by practicality, regulation, safety, and cost. The work of engineers forms the link between scientific discoveries and their subsequent applications to human and business needs and quality of life.\",\r\n    \"A late 20th century trend in typing, primarily used with devices with small keyboards (such as PDAs and Smartphones), is thumbing or thumb typing. This can be accomplished using one or both thumbs. Similar to desktop keyboards and input devices, if a user overuses keys which need hard presses and/or have small and unergonomic layouts, it could cause thumb tendonitis or other repetitive strain injury.\",\r\n    \"Medical transcription, also known as MT, is an allied health profession dealing with the process of transcribing voice-recorded medical reports that are dictated by physicians, nurses and other healthcare practitioners. Medical reports can be voice files, notes taken during a lecture, or other spoken material. These are dictated over the phone or uploaded digitally via the Internet or through smart phone apps.\",\r\n    \"Web designers are expected to have an awareness of usability and if their role involves creating mark up then they are also expected to be up to date with web accessibility guidelines. The different areas of web design include web graphic design; interface design; authoring, including standardised code and proprietary software; user experience design; and search engine optimization.\"                                                                                                                                                                \r\n  ];\r\nexport default texts;\r\n\r\n","import React from \"react\";\r\nimport \"./Wpm.css\";\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\n\r\nfunction Wpm(props) {\r\n  if (props.characters !== 0 && props.secs !== 0) {\r\n    const no = props.characters / 5;\r\n    const time = props.secs / 60;\r\n    const wpm = no / time;\r\n    return (\r\n      <div className=\"stats\">\r\n        <div className=\"speed\"><SpeedIcon /> {Math.floor(wpm)} words/min</div>\r\n        <div className=\"time\"><TimerIcon /> {time * 60} seconds</div>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n}\r\nexport default Wpm;\r\n","import React from \"react\";\r\nimport \"./GameBox.css\";\r\nimport \"./TextDisplay.css\";\r\nimport DisplayedText from \"./DisplayedText\";\r\nimport \"./InputBox.css\";\r\nimport displayTexts from \"../displayTexts\";\r\nimport Wpm from \"./Wpm\";\r\n\r\nfunction GameBox() {\r\n  const [text, setText] = React.useState(getText());\r\n  const [inputText, setInputText] = React.useState([]);\r\n  const [chars, setChars] = React.useState(0);\r\n  const [sec, setSec] = React.useState(0);\r\n  const [start, setStart] = React.useState(false);\r\n  const [finish, setFinish] = React.useState(false);\r\n  const countRef = React.useRef(null);\r\n\r\n  function getText(){\r\n    return displayTexts[Math.floor((Math.random()*displayTexts.length))];\r\n  }\r\n\r\n\r\n  function clickHandler() {\r\n    setText(getText());\r\n    setInputText([]);\r\n    setChars(0);\r\n    setSec(0);\r\n    setStart(false);\r\n    setFinish(false);\r\n  }\r\n\r\n  function ChangeHandler(event) {\r\n    var inp = event.target.value;\r\n    setInputText(inp);\r\n    onDone(inp);\r\n    countWords(inp);\r\n    setClock();\r\n  }\r\n\r\n  function countWords(inputText) {\r\n    const txt = text.replace(\" \", \"\");\r\n    setChars(() => {\r\n      return inputText\r\n        .replace(\" \", \"\")\r\n        .split(\"\")\r\n        .filter((car, ind) => car === txt[ind]).length;\r\n    });\r\n  }\r\n\r\n  function setClock() {\r\n    if (!start) {\r\n      setStart(true);\r\n      countRef.current = setInterval(() => {\r\n        setSec((prevValue) => {\r\n          return prevValue + 1;\r\n        });\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  function onDone(inp) {\r\n    if (inp === text) {\r\n      clearInterval(countRef.current);\r\n      setFinish(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"GameBox\">\r\n      <div className=\"textDisplay\">\r\n        <DisplayedText displayText={text} userInput={inputText} />\r\n      </div>\r\n      <div className=\"InputTextDiv\">\r\n        <textarea\r\n          placeholder=\"Type the above paragraph here...\"\r\n          autoFocus=\"true\"\r\n          className=\"InputTextBox\"\r\n          spellCheck=\"false\"\r\n          onChange={ChangeHandler}\r\n          value={inputText}\r\n          name=\"inputText\"\r\n          readOnly={finish}\r\n        ></textarea>\r\n        <br />\r\n        <Wpm secs={sec} characters={chars} />\r\n        <button\r\n          onClick={clickHandler}\r\n          type=\"button\"\r\n          class=\"btn btn-outline-light restartBtn\"\r\n        >\r\n          Restart\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameBox;\r\n","import React from 'react'\r\nimport \"./Footer.css\"\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"Footer\">\r\n        <h1 className=\"footerText\" >Made by Anurag</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import \"./App.css\";\nimport TopBar from \"./components/TopBar\";\nimport GameBox from \"./components/GameBox\";\nimport Footer from \"./components/Footer\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopBar />\n      <GameBox />\n      <div className=\"githIcon\">\n        <GitHubIcon\n          fontSize=\"large\"\n          onClick={(event) => window.open(\"https://github.com/anurag-pratik\", \"_blank\")\n          }\n        />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\n    <App />\n,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}